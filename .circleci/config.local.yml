version: 2.1
orbs:
  docker: circleci/docker@2.4.0
jobs:
  build:
    working_directory: /Users/gcuevas/Sites/testapp
    docker:
      - image: ubuntu:jammy
    steps:
      - run:
          name: "Configure System"
          environment:
            TZ: "UTC"
            DEBIAN_FRONTEND: "noninteractive"
          command: |
            apt-get update && \
            apt-get install -y language-pack-en-base && \
            locale-gen en_US.UTF-8
            export LANG=en_US.UTF-8
            export LC_ALL=en_US.UTF-8
            apt -y install ca-certificates curl git gnupg lsb-release apt-transport-https software-properties-common &&\
            add-apt-repository ppa:ondrej/php -y && \
            apt -y install php8.2 
            apt -y install php8.2-{xml,xdebug,zip,curl,bz2,mbstring,intl,mongodb}
      - checkout
      - setup_remote_docker
      - run:
          name: "Install Docker Compose"
          environment:
            COMPOSE_VERSION: '1.29.2'
            TZ: 'UTC/GMT'
            DEBIAN_FRONTEND: "noninteractive"
          command: |
            curl -L "https://github.com/docker/compose/releases/download/v2.12.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose
            echo "127.0.0.1	mongo" >> /etc/hosts
      - run:
          name: "Install Docker"
          environment:
            COMPOSE_VERSION: '1.29.2'
            TZ: 'UTC/GMT'
            DEBIAN_FRONTEND: "noninteractive"
          command: |
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg |  gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
            apt update
            apt-cache policy docker-ce
            echo "Y" | apt install docker-ce
      - run:
          name: "Build images of services declared in docker-compose.yml"
          command: /usr/local/bin/docker-compose build
      - run:
          name: "Start all services declared in docker"
          command: /usr/local/bin/docker-compose up -d
      - run:
          name: "Directory Listing"
          command: ls -la;
      - run:
          name: "Run Composer Update"
          command: cd src; php composer.phar update

      - run:
          name: "Docker Execs"
          command: /usr/bin/docker exec --workdir /var/www/ testapp-php-fpm-1 sh -c "cd  /var/www/; php ./vendor/bin/phpunit ./tests"
  deploy:
    docker:
      - image: amazonlinux:2023
    steps:
      - run: echo "deploy"
workflows:
  build_test_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build