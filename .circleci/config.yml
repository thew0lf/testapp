version: 2.1
orbs:
  docker: circleci/docker@2.4.0
jobs:
  build:
    docker:
      - image: php:8.2-fpm-alpine
      - image: mongo:latest
    steps:
      - run:
          name: "Install dependencies"
          command: echo "running alpine"
      - run: apk add busybox-extras curl-dev openssl-dev jq git make g++ autoconf rabbitmq-c-dev libtool tzdata && pecl install mongodb && docker-php-ext-enable mongodb
#      - docker/install-docker
#      - docker/install-dockerize
          #command: yum update
      #- run: yum -y install systemd docker
      #- run: curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose && chmod +x /usr/local/bin/docker-compose && /usr/local/bin/docker-compose version
      #- run: systemctl start docker
      - checkout
      #- run: docker-machine start dev
      #- run: docker-compose build && docker-compose up -d
      #- run: yum -y install php-devel php-pear nginx
      #- run: yum -y install php-mbstring
      - run:
          name: "Wait On DB"
          command: dockerize -wait tcp://localhost:27017 -timeout 1m
      - run: pecl install mongodb
#      -  run: apk apk --no-cache add \
#                  add git make g++ autoconf rabbitmq-c-dev libtool tzdata \
#                  && pecl install mongodb \
#                  && docker-php-ext-enable mongodb
      - run: echo "extension=mongodb.so" >> /etc/php.d/mongo.ini
      - run: echo "127.0.0.1	mongo" >> /etc/hosts
      - run: cat /etc/hosts
      - run:
          name: "List Directory"
          command: cd src/src && ls -la .
      - run:
          name: "Run composer"
          command: cd src && ls -la && php composer.phar update
      - run:
          name: "Run Unit Tests"
          command: cd src && pwd && vendor/bin/phpunit tests
      - run:
          name: "Deploy To CodeDeploy using ORBs"
          command: echo "Deployed"
  test:
    docker:
      - image: amazonlinux:2023
    steps:
      - run: echo "test"
workflows:
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build